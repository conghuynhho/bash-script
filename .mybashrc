
# ggjcp will run a bash file in the directory of ggj_create_pull.sh
# ggjcp <repo> <target_branch> <source_branch{staging}>
# HOW TO USE:
ggjcp() {
    repo=$1
    target_branch=$2
    source_branch=$3

    # add default value for source_branch is staging
    if [ -z "$source_branch" ]; then
        source_branch="staging"
    fi

    if [ -z "$repo" ] || [ -z "$source_branch" ] || [ -z "$target_branch" ]; then
        echo "Usage: $0 <repo> <source_branch> <target_branch>"
        exit 1
    fi

    # Variable to store a pair of key-value for ggj repo which have $repo as key and $url as value
    declare -A ggj_repos=(
        ["sf"]="surface.gogojungle.co.jp"
        ["mp"]="mypage.gogojungle.co.jp"
        ["api"]="api.gogojungle.co.jp"
        ["rt"]="real-trade.tech"
        ["cf"]="configs.gogojungle.co.jp"
    )

    # Check if $repo is in the list of ggj_repos
    if [ -z "${ggj_repos[$repo]}" ]; then
        echo "Repo $repo is not in the list of ggj_repos"
        exit 1
    fi

    # debug
    # echo "repo: $repo"
    # echo "target_branch: $target_branch"
    # echo "source_branch: $source_branch"
    # echo "ggj_repos[$repo]: ${ggj_repos[$repo]}"

    # Open github in your browser
    # check start command if available
    if ! command -v start &> /dev/null
    then
        echo "start could not be found"
        exit
    fi

    # Echo with style
    echo -e "\e[1;32mOpening github in your browser\e[0m"
    echo "https://github.com/gogojungle/${ggj_repos[$repo]}/compare/${target_branch}...${source_branch}"
    start "https://github.com/gogojungle/${ggj_repos[$repo]}/compare/${target_branch}...${source_branch}"
}

mkcd ()
{
  mkdir -p -- "$1" && cd -P -- "$1"
}